2025-07-19 Anton Adamansky  <adamansky@gmail.com>  [WIP]
  * Migration to Autark build system.
  * iwrb improvements and iwrb test cases (iwrb.h)

2024-07-02  Anton Adamansky  <adamansky@gmail.com>  [v1.4.19]
  * Added iwcsv.h utility used to produce CSV formatted lines.
  * Fixed incorrect JSON generation for some locales where ',' is printed as FP separator.
  * Fixed race condition in iwtp (iwtp.h)
  * Naming refactoring, minor fixes
  * Added iwjsreg_merge(), iwjsreg_replace()
  * Added jbn_merge_patch_path()
  * Fixed json pointer error for empty path.
  * Added iwu_file_read_as_buf_max() (iwutils.h)
  * Fixed memory leak in iwstw_schedule_empty_only()

2024-04-16  Anton Adamansky  <adamansky@gmail.com>  [v1.4.18]
  * Added iwp_random_fill() (iwp.h)
  * Added convenient numeric conversion functions (iwconv.h)
  * Chore: iwp_{lock,unlock} fcnt replaced by more convenient and reliable flock()
  * Added iwxstr_printf_alloc() (iwxstr.h)
  * Copyright updated
  * Added new iwjsreg.h module - simple JSON key-value file store with atomic
  * Allowed to construct JBL_NODE without IWPOOL ini this case node data will

2023-11-13  Anton Adamansky  <adamansky@gmail.com>  [v1.4.17]
  * Added void iwulist_reset(IWULIST *list) (iwarr.h)
  * Added experimental jbn_from_js() (iwjson.h)
  * Fixed C++ compilation errors https://github.com/Softmotions/ejdb/issues/381
  * Fixed Correct UCS-16 surrogate pair start code point. #51
  * Added iwchars.h replacing some ctype.h functions.
  * Added simple refcounting container iwrefs.h
  * Fixed incorrect parsing of empty JSON keys.
  * Added jbn_as_xml() (iwjson.h)
  * Added jbn_get() (iwjson.h)
  * Added IW_ERROR_OPERATION_TIMEOUT common error code.
  * Removed support of legacy iwkv v1 data file format.
  * Fixed incorrect read of memory bytes (reported by valgrind)
  * Fixed windows build
  * Added ref counting feature to iwpool (iwpool.h)

2022-11-14  Anton Adamansky  <adamansky@gmail.com>  [v1.4.16]
  * Fixed behavior of iwp_tmpdir() accourding to #47
  * Fixed  Incorrect serialization of INT64_MIN by iwitoa() #48 (iwconv.h)
  * Added iwxstr_insert() (iwxstr.h)
  * ~8% IO performance improvements due to use of MADV_RANDOM
  * Fixed Github Vulnerability Report GHSL-2022-066
  * Added additional IW_ERROR_XX codes (iwlog.h)
  * Added VERBOSE log level (iwlog.h)
  * Added iwhmap_put_str() (iwhmap.h)
  * Added iwulist_remove_first_by(), iwulist_find_first() (iwarr.h)
  * Added iwxstr_new_printf() (iwxstr.h)
  * Reduced iwkv code complexity. Removed in-memory db cache since benchmarks shows only minor perf imprivements with cache.
  * Fixed many of UB errors (eg: misaligned access)
  * Removed dependency on kbtree.h replaced with iwavl.h
  * Added json module (migrated from ejdb) (iwjson.h, iwbinn.h)
  * Added platform neutral iwp_basename() and iwp_dirname() (iwp.h)
  * Added iwu_file_read_as_buf_len() (iwutils.h)
  * Added IW_NORET (basedefs.h)
  * iwxstr_destroy_keep_ptr() now returns pointer to underlying buffer
  * IWHMAP can operate in LRU cache mode (iwhmap.h)
  * Added .ini file parsing utility module (iwini.h)
  * Added iw_cond_timed_wait_ms() (iwth.h)
  * Added iwstw_set_on_task_discard(), iwstw_schedule_only() (iwstw.h)
  * Fixed iwp_exec_path() on FreeBSD sinceprocfs(5) is not mounted by default in FreeBSD.
  * iwp_exec_path() implemented for FreeBSD & Macos
  * Added `int64_t iwatoi2(const char *str, size_t len)` (iwconv.h)
  * iwpool_split_xx() now returns const pointer (iwpool.h)
  * Fixed iwre() regexp compilation error.
  * Added new regexp API implementation (iwre.h) based on https://github.com/jserv/cregex/
  * Removed iwsha256() from sources. Use iwnet/beassl for hashing instead.

2022-02-18  Anton Adamansky  <adamansky@gmail.com>  [v1.4.15]
  * Added format checking __attribute__ to all printf like functions.

2022-02-14  Anton Adamansky  <adamansky@gmail.com>  [v1.4.14]
  * Used ftruncate() instead of posix_fallocate() due to EINVAL on ZFS (unix.c)
  * Enable XOPEN_SOURCE only for linux
  * Fixed incorrect selection of `strerror_r` for musl builds.
  * Set appropriate _XOPEN_SOURCE=700 level for `nftw` (unix.c)
  * iwxstr_printf() now conforms to stdlib printf function (iwxstr.h)
  * Moved some useful defs from iwutil.h into basedefs.h
  * Fixed iwre_match() function signatute allowing `const  char* input`
  * Added lightweight regexp implementation (iwre.h)
  * Added `size_t iwxstr_asize(IWXSTR*)` (iwxstr.h)
  * Added locale independed strtod: iwstrtod() (iwconv.h)

2021-09-03  Anton Adamansky  <adamansky@gmail.com>  [v1.4.13]
  * Fixed SEGV in iwkv_cursor_open with zero-length key and IWDB_VNUM64_KEYS (#42)
  * Fixed Heap UAF in iwkv_close after invoking iwkv_db_set_meta on a database (#41)
  * Added `iwxstr_wrap()` (iwxstr.h)
  * Added `RCT()` checker for pthread routines (basedefs.h)
  * Added iwbin2hex() (iwconv.h)
  * iwxstr_clear() sets value of intgernal string buffer to zero (iwxstr.h)
  * Added user data store capability to iwxstr (iwxstr.h)
  * Added iwpool_strdup2(), iwpool_strndup2() (iwpool.h)
  * Added iwp_set_current_thread_name() (iwp.h)
  * Added RCENO define (basedefs.h)
  * Thread poll, single thread worker fixes
  * Added IW_MIN, IW_MAX, IW_XSTR defines

2021-07-19  Anton Adamansky  <adamansky@gmail.com>  [v1.4.12]
  * Added IW_ERROR_UNSUPPORTED error code
  * Added  IW_ALLOC __attribute__((malloc)) optimization
  * Added ring buffer implementation (iwrb.h)
  * Added `queue_blocking` argument `iwstw_start()` (iwstw.h)
  * Minor changes in iwlog.h api
  * `memcpy` replaced by `memmove` for overlaping cases (iwarr.c)

2021-05-10  Anton Adamansky  <adamansky@gmail.com>  [v1.4.11]
  * Fixed typo (qsort_r => sort_r) (iwarr.c)
  * Added simple threads pool implementation (iwtp.h)
  * Added IW_ERROR_NOT_ALLOWED error code (iwlog.h)
  * Added RCR() error checking macro (basedefs.h)
  * Added iwlist_sort(), iwulist_sort() (iwarr.h)
  * Added iwstw_schedule_empty_only() (iwstw.h)
  * Added iwstw_queue_size() (iwstw.h)
  * Set O_CLOEXEC flag on all file open() calls
  * Added IW_ERROR_UNEXPECTED_RESPONSE error code (iwlog.h)
  * Added iwxstr_set_size(), iwxstr_destroy_keep_ptr() (iwxstr.h)
  * Added iwlist_at2() (iwarr.h)
  * Added handy ZRET definition (basedefs.h)
  * Added handy ZGO definition (basedefs.h)
  * Project code reformatted using uncrustify
  * Updated copyright headers
  * Fixed build errors on macOS
  * Removed dependency on glibc specific features
  * Added new iwxstr_pop() (iwxstr.h)

2020-12-22  Anton Adamansky  <adamansky@gmail.com>  [v1.4.10]
  * Tuned iwkv file resizing policy
  * Fixed misuse of `IWKV_OPTS.file_lock_fail_fast` (#35)
  * Correct handling of EINTR, EAGAIN in read/write functions (unix.c)

2020-11-18  Anton Adamansky  <adamansky@gmail.com>  [v1.4.9]
  * Code review of iwkv cache keys comparison, related issue: https://github.com/Softmotions/ejdb/issues/291
  * Added `bool iwu_uuid_valid(const char *uuid)` (iwuuid.h)

2020-11-08  Anton Adamansky  <adamansky@gmail.com>  [v1.4.8]
  * Fixed serios bug concerning non-unique ejdb2 indexes, details: https://github.com/Softmotions/ejdb/issues/291
  * Fixed potencial memory leak in `iwlist_create()` (iwarr.h)
  * Fixed wrong `iwulist_clear()` behaviour (iwarr.h)
  * Code cleanup
  * Added `iwulist_at2()` (iwarr.h)
  * Removed not needed assertion (iwstree.c)

2020-09-21  Anton Adamansky  <adamansky@gmail.com>  [v1.4.7]
  * Correct handling of EINTR, EAGAIN in read/write functions (unix.c)
  * Minor fixes on iwhmap

2020-06-24  Anton Adamansky  <adamansky@gmail.com>  [v1.4.6]
  * Added `iwpool_user_data_detach()` (iwpool.h)
  * Added `iwpool_create_empty()` (iwpool.h)
  * Added simple hashmap implementation (iwhmap.h)
  * `IWPOOL` is able to store associated user data (iwpool.h)
  * `pthread_barrierattr` shim for android API < 24
  * Added `iwsha256()` SHA-256 hash implementation (iwsha2.h)
  * Added single thread worker (iwstw.h)
  * Added `iwstree_clear()` (iwstree.h)

2020-06-18  Anton Adamansky  <adamansky@gmail.com>  [v1.4.5]
  * Added `iwulist_clear` (iwarr.h)
  * Added `RCIF` (basedefs.h)
  * Fix assertion error in `iwstree_remove()` (iwstree.h)
  * Allows zero key/value placeholders in `iwstree_iter_next()` (iwstree.h)
  * Added `iwstree_put_overwrite` (iwstree.h)
  * Added  iwstree iteration API (iwstree.h)
  * Added `iwpool_used_size` (iwpool.h)
  * Added `iwstree_int64_cmp` (iwstree.h)
  * Added `IW_DEPRECATED` (basedefs.h)

2020-05-02  Anton Adamansky  <adamansky@gmail.com>  [v1.4.4]
  * Fixed incorrect copying of cursor key data in `IWDB_COMPOUND_KEYS` mode (iwkv.c)
  * Adde compound key example code (compoundkeys1.c)
  * Added `iwstree_visit` (iwstree.h)

2020-04-24  Anton Adamansky  <adamansky@gmail.com>  [v1.4.3]
  * Fixed errors found by PVS studio

2020-04-20  Anton Adamansky  <adamansky@gmail.com>  [v1.4.2]
  * Added IWULIST, IWLIST implementation (iwarr.h)
  * Added iwpool_split_string (iwpool.h)
  * Added iwpool_printf (iwpool.h)
  * Added iwpool_printf_split (iwpool.h)
  * Added iwxstr_shift (iwxstr.h)
  * Added `#define RCHECK` (basedefs.h)
  * Better error handling of `kh_put`

2020-03-07  Anton Adamansky  <adamansky@gmail.com>  [v1.4.1]
  * Fixed possible data corruption in `_fsm_blk_allocate_aligned_lw` (iwfsmfile.c)
  * Better new SBLK blocks locality  (performance)

2020-03-06  Anton Adamansky  <adamansky@gmail.com>  [v1.4.0]
  * Implemented new compact and performant data storage format v2
  * Added WiredTiger v3.2.1 benchmarks
  * Added BerkeleyDB v5.3.28 benchmarks
  * Added TokyoCabinet v1.4.48 benchmarks

2020-02-17  Anton Adamansky  <adamansky@gmail.com>  [v1.3.37]
  * Added iwrc iwp_mkdirs(const char *path) (iwp.h)
  * Added uint32_t iwu_x31_u32_hash(const char *s) (iwutils.h)
  * Added iwu_replace() (iwutils.h)
  * Added RCA( macro definition
  * Removed IW_EXPORT iwrc iwkv_db_last_access_time(IWDB db, uint64_t *ts)
  * Added `IW_ERROR_INVALID_VALUE`
  * Added iwstree - splay tree imlementation (iwstree.h)
  * Pointers allocated by iwpool are now 8-byte aligned

2020-01-16  Anton Adamansky  <adamansky@gmail.com>  [v1.3.36]
  * Safer iowow initialization bootstrap process.

2020-01-15  Anton Adamansky  <adamansky@gmail.com>  [v1.3.35]
  * Added specific checks for TARGET_OS_IPHONE
  * Ported to iOS
  * Added wal locking interceptor to WAL opts

2019-12-19  Anton Adamansky  <adamansky@gmail.com>  [v1.3.32]
  * Improved WAL durability

2019-11-20  Anton Adamansky  <adamansky@gmail.com>  [v1.3.31]
  * Keys comparison refactoring

2019-11-19  Anton Adamansky  <adamansky@gmail.com>  [v1.3.30]
  * Added check if  __unused is already defined in `iwth.c`
  * CRITICAL Comparsions keys fix #30

2019-11-13  Anton Adamansky  <adamansky@gmail.com>  [v1.3.29]
  * FIXED iwkv_open assertion fail on opening garbage file #29

2019-11-07  Anton Adamansky  <adamansky@gmail.com>  [v1.3.28]
  * iwlog now supports ANDROID NDK logging (iwlog.h)

2019-10-28  Anton Adamansky  <adamansky@gmail.com>  [v1.3.27]
  * CRITICAL WAL durability fixes
  * Support of online backups #24
  * Windows platform functions fixes
  * CLion project files added
  * WAL recovering fixes

2019-08-29  Anton Adamansky  <adamansky@gmail.com>  [v1.3.25]
  * CRITICAL Fixed heap corruption due incorrect usage of khash API in `_db_destroy_lw` (iwkv.c)

2019-08-22  Anton Adamansky  <adamansky@gmail.com>  [v1.3.24]
  * CRITICAL Fixed race condition in WAL rollforward

2019-08-17  Anton Adamansky  <adamansky@gmail.com>  [v1.3.23]
  * WAL refactoring, better stability

2019-07-18  Anton Adamansky  <adamansky@gmail.com>  [v1.3.22]
  * Small optimizations in `iwfsmfile.c`
  * Added `iwp_clock_get_time` as  portable version of `clock_gettime`
  * `static_assert` is  set to `_Static_assert` if not defined
  * Added `__USE_MINGW_ANSI_STDIO` for MinGW build

2019-06-13  Anton Adamansky  <adamansky@gmail.com>  [v1.3.20]
  * CRITICAL Fixed incorrect keys allocation in IWDB_COMPOUND_KEYS mode

2019-06-13  Anton Adamansky  <adamansky@gmail.com>  [v1.3.19]
  * CRITICAL: Fixed assertion fail in iwkv records cache

2019-06-12  Anton Adamansky  <adamansky@gmail.com>  [v1.3.18]
  * Limit one time file allocation step to 2G

2019-05-03  Anton Adamansky  <adamansky@gmail.com>  [v1.3.17]
  * CRITICAL: State of previously deleted database may have influence on newly created dbs
  * BUG: Fixed database metadata blocks leak (db->meta_blk) on database destroy

2019-05-03  Anton Adamansky  <adamansky@gmail.com>  [v1.3.16]
  * CRITICAL: Fixed deadlock on database removal

2019-05-01  Anton Adamansky  <adamansky@gmail.com>  [v1.3.15]
  * CRITICAL: Fixed database file corruption during sequential records deletion with `iwkv_cursor_del` (iwkv.c)

2019-04-27  Anton Adamansky  <adamansky@gmail.com>  [v1.3.14]
  * CRITICAL: Fixed unexpected database file truncation and data loss on close.
  * Adjusted default WAL options for Android

2019-04-25  Anton Adamansky  <adamansky@gmail.com>  [v1.3.13]
  * Performance impovements in Write Ahead Logging (iwal.c)
  * BUG: WAL file was not truncated after `wal->checkpoint_timeout_sec` timeout (iwal.c)

2019-04-21  Anton Adamansky  <adamansky@gmail.com>  [v1.3.12]
  * Android NDK support (#23)
  * Pthreads `PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP` is used by default

2019-04-08  Anton Adamansky  <adamansky@gmail.com>  [v1.3.11]
  * Added size_t iwpool_allocated_size(struct iwpool *pool) (iwpool.h)
  * Added `file_lock_fail_fast` iwkv open option.
  * Fixed meaningful PVP studio errors:

2019-04-05  Anton Adamansky  <adamansky@gmail.com>  [v1.3.10]
  * Added cmake `OWNER_PROJECT_NAME` option used to install header files in `CMAKE_INSTALL_INCLUDEDIR}/OWNER_PROJECT_NAME/PROJECT_NAME`
  * Removed `-fvisibility=hidden` C flag when building shared library

2019-03-29  Anton Adamansky  <adamansky@gmail.com>  [v1.3.9]
  * BUG `IW_HAVE_PTHREAD_CONDATTR_SETCLOCK` was not properly set for `iwal.c` hence high CPU usage when `wal` mode is on.

2019-03-27  Anton Adamansky  <adamansky@gmail.com>  [v1.3.8]
  * BUG Fixed incorrect call of `_kvblk_kv_get` in `iwkv_cursor_seth`.

2019-03-26  Anton Adamansky  <adamansky@gmail.com>  [v1.3.7]
  * Added `iwkv_cursor_del()` (#22)
  * Fixed memory corruption during simultaneous cursor iteration and value updating

2019-03-22  Anton Adamansky  <adamansky@gmail.com>  [v1.3.6]
  * BUG: Memory leak in `iwkv_cursor_open` on error (#21)
  * BUG: `iwxstr_new2()` with zero size argument causes illegal memory write (#20)
  * Added `iwkv_cursor_seth()` record update handle supported by `iwkv_cursor_set`
  * Avoided deadlocks with `iwkv_del()` - now this function does't escalate exclusive lock on storage
  * More consistent error reporting using cursor functions

2019-03-20  Anton Adamansky  <adamansky@gmail.com>  [v1.3.5]
  * BUG: Data from deleted database can interfere with newly created db (#19)

2019-03-11  Anton Adamansky  <adamansky@gmail.com>  [v1.3.4]
  * Code documentation improvements

2019-03-08  Anton Adamansky  <adamansky@gmail.com>  [v1.3.3]
  * BUG: `iwkv_puth` called with incorrect previous value (iwkv.h)
  * _kvblk_getvalue renamed to _kvblk_value_get (iwkv.c)
  * _kvblk_peek_val renamed to _kvblk_value_peek (iwkv.c)
  * _kvblk_getkey renamed to _kvblk_key_get (iwkv.c)
  * _kvblk_getkv renamed to _kvblk_kv_get (iwkv.c)

2019-03-04  Anton Adamansky  <adamansky@gmail.com>  [v1.3.2]
  * Added `iwkv_cursor_is_matched_key` (iwkv.h)
  * `iwkv_cursor_copy_key` now aware of `IWDB_COMPOUND_KEYS` mode (iwkv.h)
  * `iwkv_cursor_copy_key` can accept zero kbuf,kbufsz only compound part will returned in this case (iwkv.h)

2019-02-28  Anton Adamansky  <adamansky@gmail.com>  [v1.3.1]
  * Eliminate adaptive `IWDB_VNUM64_KEYS` key sizing in `_unpack_effective_key` for the sake of API simplicity (iwkv.c)
  * BUG: incorrect key handling in `iwkv_del` - key was not unpacked before. (iwkv.h)

2019-02-27  Anton Adamansky  <adamansky@gmail.com>  [v1.3.0]
  * `IWKV_PUT_HANDLER` called for insert operations (not only for updates)
  * Added `IWFS_OUNLINK` flag. Unlink(delete) file on close (iwfile.h)
  * Added `IWFS_OTMP` flag. Create tmp file (iwfile.h)
  * Added UUID v4 generation function (iwuuid.h)
  * Added iwp_tmpdir() (iwp.h)
  * Added iwp_allocate_tmpfile_path() (iwp.h)
  * Added iwxstr_printf() (iwxstr.h)
  * Added iwxstr_cat2() (iwxstr.h)
  * Added `IWKV_VAL_INCREMENT` mode for `iwkv_put()` and test case (iwkv.h)
  * Added support of variable-length encoded integer keys `IWDB_VNUM64_KEYS` (iwkv.h)
  * Added support of compound keys (`IWDB_COMPOUND_KEYS`) (#18)
  * Removed `dup` integer value routines
  * Code cleanup and refactoring

2018-11-06  Anton Adamansky  <adamansky@gmail.com>  [v1.2.14]
  * BUG: Fix WAL checkpoint workflow to avoid deadlocks with cursor threads
  * BUG: Clang6 fatal error: variable 'cur' is used uninitialized  (#15)
  * Implemented new multithreaded stress test (iwkv_test6.c) used OMP stack
  * Added iwkv_new_db(IWKV iwkv, iwdb_flags_t dbflg, uint32_t *odbid, IWDB *dbp) (iwkv.h)
  * Removed unused `IWKV_NOLOCKS` option.
  * Added `IW_EXPORT` to `iowow_version_*` API functions  (iowow.h)
  * Added iwrc iwkv_state(IWKV iwkv, IWFS_FSM_STATE *out) (iwkv.h)
  * Do not check `IWKV_NO_OVERWRITE` for databases in `IWDB_DUP_UINTXX_VALS` mode
  * Added iwkv_puth() with provided old value interceptor: `IWKV_PUT_HANDLER` (iwkv.h)
  * Added `IWKV_RC_DUP_ARRAY_EMPTY` flag and `IWKV_DUP_REPORT_EMPTY` opflag for `iwkv_put()` (iwkv.h)

2018-08-02  Anton Adamansky  <adamansky@gmail.com>  [v1.2.13]
  * BUG: Correct cursors adjustments during db update operations (#13)
  * BUG: Fixed WAL integration for updates in IWDB_DUP_UINT32_VALS|IWDB_DUP_UINT64_VALS mode
  * Store arbitrary data blocks associated with iwkv internal databases (#12)
  * Checking of max key/value size (IWKV_MAX_KVSZ) for updates in IWDB_DUP_UINT32_VALS|IWDB_DUP_UINT64_VALS mode
  * Minor allocation performance optimizations in _kvblk_addkv()

2018-07-21  Anton Adamansky  <adamansky@gmail.com>  [v1.2.12]
  * Set terminating '\0' in iwitoa() (iwconv.h)
  * Added MAP_NORESERVE option for PRIVATE mmaping on Linux (#11)
  * Added iwu_file_read_as_buf() (iwutils.h)
  * Optimized cmake config files generation

2018-06-15  Anton Adamansky  <adamansky@gmail.com>  [v1.2.11]
  * iwpool refactoring fixed pool memory corruption (iwpool.h)
  * Fixed set terminating `\0` in iwpool_strdup() (iwpool.h)
  * Fixed wrong `if` in iwpool_calloc() (iwpool.h)

2018-06-11  Anton Adamansky  <adamansky@gmail.com>  [v1.2.10]
  * Added iwpool_calloc() (iwpool.h)
  * Added iwpool_strdup(), iwpool_strndup() (iwpool.h)
  * Fixed memory leak in iwpool_destroy() (iwpool.h)
  * Renamed platform/linux/linux.c to platform/unix/unix.c (#9)
  * Added iwu_replace_char() (iwutils.h)

2018-05-29  Anton Adamansky  <adamansky@gmail.com>  [v1.2.9]
  * Rewrite of iwftoa() (iwconv.h)
  * Fixed typo: iwtoa renamed to iwitoa (iwconv.h)
  * Added iwu_cmp_files (iwutils.h)
  * Return type of iwxstr_ptr() changed to char* (iwxstr.h)

2018-05-19  Anton Adamansky  <adamansky@gmail.com>  [v1.2.8]
  * IOWOW Ported to MIPS32 (big-endian) tested on Debian GNU/Linux 9.4

2018-05-17  Anton Adamansky  <adamansky@gmail.com>  [v1.2.7]
  * Fixed incorrect exclusive locking in iwkv_del()"

2018-05-16  Anton Adamansky  <adamansky@gmail.com>  [v1.2.6]
  * Fixed: database file is not created automatically if no open modes specified in opts

2018-05-16  Anton Adamansky  <adamansky@gmail.com>  [v1.2.5]
  * Added iwkv_opflags opflags into iwkv_del

2018-05-14  Anton Adamansky  <adamansky@gmail.com>  [v1.2.4]
  * Fixed race conditions in iwkv_cursor_to()

2018-05-11  Anton Adamansky  <adamansky@gmail.com>  [v1.2.3]
  *  Fixed race conditions in iwkv_cursor_set()

2018-05-08  Anton Adamansky  <adamansky@gmail.com>  [v1.2.2]
  * Added static iowow_s libraries to the default CMake exports.

2018-05-07  Anton Adamansky  <adamansky@gmail.com>  [v1.2.1]
  * Removed unistd.h from src/fs/iwdlsnr.h since it is not portable.
  * C++ friendly header files

2018-05-06  Anton Adamansky  <adamansky@gmail.com>  [v1.2.0]
  * IOWOW ported to Windows x86-64 platform #1

2018-05-02  Anton Adamansky  <adamansky@gmail.com>  [v1.1.0]
  * Write Ahead Log (WAL) implemented #2
  * Changed database block size to 128 bytes so max db size 512Gb
  * Better basename/basename_r detection in iwlog.c #4

2018-04-16  Anton Adamansky  <adamansky@gmail.com>  [v1.0.6]
  * src/CMakeLists.txt cleanups #3
  * x86-specific code in src/platform/iwp.c is not guarded #7
  * Database size limited to 2GB on 32 bit CPUs #5
  * Database block size changed: 64 to 128 bytes #8

2018-04-12  Anton Adamansky  <adamansky@gmail.com>  [v1.0.5]
  * iwextfile: do msync before munmap on file resizing

2018-04-12  Anton Adamansky  <adamansky@gmail.com>  [v1.0.4]
  * Added IWFSM_SYNC_BMAP option to iwfs_fsm_aflags
  * Removed IWFS_NO_MMASYNC since it does noop on many platforms
  * Set exclusive iwkv write lock in iwkv_sync()

2018-04-10  Anton Adamansky  <adamansky@gmail.com>  [v1.0.3]
  * Added basic iowow.3 man page to distribution archive
  * Use posix_fallocate() to extend iwkv file instead of ftruncate() on Linux/FreeBSD

2018-04-09  Anton Adamansky  <adamansky@gmail.com>  [v1.0.2]
  * Removed unneeded -D_LARGE_FILE_SOURCE from iowow.h

2018-04-09  Anton Adamansky  <adamansky@gmail.com>  [v1.0.1]
  * Fix export flags iwlog2 method

2018-04-08  Anton Adamansky  <adamansky@gmail.com>  [v1.0.0]
  * Initial release.